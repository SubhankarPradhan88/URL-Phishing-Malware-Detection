window.onload = function () {
  document.getElementById("defaultOpenRefresh").click();    // Open default tab on page load

  // Handle analytics graph based on the clicks for short URLS
  const labels = document.getElementById('shortUrlsList').innerHTML.split(',');
  const dataSet = document.getElementById('shortUrlsClicks').innerHTML.split(',');

  const ctx = document.getElementById('urlAnalytics').getContext('2d');
  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: labels,
      datasets: [{
        label: 'Analysis of clicks for the shortened URLs',
        data: dataSet,
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
          'rgba(255, 99, 132, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
};

// Detect the current domain
const detectEnvironmentHandler = () => {
  const webProtocolHost = `${window.location.protocol}//${window.location.host}/`;
  return webProtocolHost;
}

document.querySelector('#hostName').innerHTML = detectEnvironmentHandler();

// Get the modal
const modal = document.getElementById("modalAlert");

// Handle Phishing & Malware detection algorithms
document.getElementById('fullUrl').addEventListener('blur', (e) => {
  let { value } = e.target;
  if (value) {
    // Handle Phishing & Malware detection validations
    const protocol = value.split(':')[0];
    if (protocol === 'http') {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered is not using secured HTTP protocol (HTTPS). Will you like to proceed?";
    }

    const redirectUrlCount = value.split('//');
    if (redirectUrlCount.length > 2) {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered will be redirected to another website. Will you like to proceed?";
    }

    const checkWarning = value.search("warning");
    if (checkWarning > 0) {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered has 'warning' key in it, which is not safe to use. Will you like to proceed?";
    }

    const domainCheck = value.split('//')[1];
    const domainCheckSecond = domainCheck.split('/')[0];
    const domainDotLength = domainCheckSecond.split('.');
    if (domainDotLength.length > 4) {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered appears to be a “Phishing URL”, since it has multiple sub domains. Will you like to proceed?";
    }

    const domainSuffixCheck = value.split('//')[1];
    const domainHiphenCount = domainSuffixCheck.search("-");
    if (domainHiphenCount > 0) {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered appears to be a “Phishing URL”, since it contains '-' symbol in the domain. Will you like to proceed?";
    }

    const domainSymbolCount = value.search("@");
    if (domainSymbolCount > 0) {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered appears to be a “Phishing URL”, since it contains '@' symbol in the domain. Will you like to proceed?";
    }

    const checkIpAddress = value.split('//')[1];
    const isIPNumber = checkIpAddress.split('.')[0];
    if (!isNaN(isIPNumber)) {
      modal.style.display = "block";
      document.getElementById("modalWarning").innerHTML = "URL entered appears to be a “Phishing URL”, since it contains IP address in the domain. Will you like to proceed?";
    }

    const phishTankDataset = document.getElementById('phishTankData').innerHTML.split(',');

    for (const item of phishTankDataset) {
      if (item === value) {
        modal.style.display = "block";
        document.getElementById("modalWarning").innerHTML = "URL entered appears to be a “Phishing URL”. Will you like to proceed?";
      }
    }

    document.getElementById('shortUrl').value = document.getElementById('shortId').value;
  }
})

document.getElementById('yesAction').addEventListener('click', () => {
  modal.style.display = "none";
})

// Clear data for the input fields
document.getElementById('noAction').addEventListener('click', () => {
  document.getElementById('fullUrl').value = '';
  document.getElementById('shortUrl').value = '';
  modal.style.display = "none";
})

// Handle Tab
const tabHandler = (evt, tabName) => {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " active";
}

// Refresh data
document.getElementById('refData').addEventListener('click', () => {
  location.reload();
})

// Copy the short URL to clipboard
const table = document.getElementById("linksCollectionTable");
const tbody = table.getElementsByTagName("tbody")[0];

tbody.onclick = function (e) {
  e = e || window.event;
  let data = [];
  let target = e.target;
  while (target && target.nodeName !== "TR") {
    target = target.parentNode;
  }
  if (target) {
    let cells = target.getElementsByTagName("td");
    for (let i = 0; i < cells.length; i++) {
      data.push(cells[i].innerHTML);
    }
  }

  // Copy the short URL using clipboard API
  let clickedShortUrl = data[1].split('</a>').join().split('>')[1].replace(/,/g, '');
  const cb = navigator.clipboard;
  cb.writeText(`${detectEnvironmentHandler()}${clickedShortUrl}`);
}
